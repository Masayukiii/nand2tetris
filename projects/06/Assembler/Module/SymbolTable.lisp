(defun make-symbol-table ()
  (defparameter *symbol-table* (make-hash-table :test #'equal))
  (setf (gethash "SP"      *symbol-table*) "0000000000000000")
  (setf (gethash "LCL"     *symbol-table*) "0000000000000001")
  (setf (gethash "ARG"     *symbol-table*) "0000000000000010")
  (setf (gethash "THIS"    *symbol-table*) "0000000000000011")
  (setf (gethash "THAT"    *symbol-table*) "0000000000000100")
  (setf (gethash "SCREEN"  *symbol-table*) "0100000000000000")
  (setf (gethash "KBD"     *symbol-table*) "0110000000000000")
  (setf (gethash "R0"      *symbol-table*) "0000000000000000")
  (setf (gethash "R1"      *symbol-table*) "0000000000000001")
  (setf (gethash "R2"      *symbol-table*) "0000000000000010")
  (setf (gethash "R3"      *symbol-table*) "0000000000000011")
  (setf (gethash "R4"      *symbol-table*) "0000000000000100")
  (setf (gethash "R5"      *symbol-table*) "0000000000000101")
  (setf (gethash "R6"      *symbol-table*) "0000000000000110")
  (setf (gethash "R7"      *symbol-table*) "0000000000000111")
  (setf (gethash "R8"      *symbol-table*) "0000000000001000")
  (setf (gethash "R9"      *symbol-table*) "0000000000001001")
  (setf (gethash "R10"     *symbol-table*) "0000000000001010")
  (setf (gethash "R11"     *symbol-table*) "0000000000001011")
  (setf (gethash "R12"     *symbol-table*) "0000000000001100")
  (setf (gethash "R13"     *symbol-table*) "0000000000001101")
  (setf (gethash "R14"     *symbol-table*) "0000000000001110")
  (setf (gethash "R15"     *symbol-table*) "0000000000001111")
)

(defun addEntry (symbol address)
  ; add symbol and address to symbol table.
  (setf (gethash symbol *symbol-table*) address)
)

(defun contains (symbol)
  ; the symbol includes in symbol table?
)

(defun getAddress (symbol)
  ; return address via symbol table
  (format t "not getting address!! ~%")
  (format t "~a~%" (gethash symbol *symbol-table*))
  (gethash symbol *symbol-table*)
)
